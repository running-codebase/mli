


---------------------------------
TODO
	- create the fake JSON
	- return it as a string
- create handler for success and fail on both create user and login
- create handler for no combat
	- create the json parser in the player class that assigns the variables
	- populate the screen for the returned data
	- button to find combat
	- create combat api dummy data and return parsing
	- nerf the dual opbject
	- have it as just a boolean 
	- Long, Lat, Orientation wrapper

	- the player object has a way to call up the chain when it is updated so that is passed to the cloud.

	- get the longitude stuff in and assign it when required
	- the same with phone orientation
	- Start drawing the images
	- get these things showing up together





START


	Create an enemy at player position + 50meters north
	Refactor out location and orientation

	Calculate the distance bewteen two points
	Calculate the angle between two points

	Set up the attack button with a check and then have it return succesful if conditions are met

Dialog that ends the combat

Close the combat



- create the attack api 
- create the combat resolution section

- attack button api call dummy data and return handeling
	- fix up the class to support actual values
	- get player long and lat
	- calculate distance to other point
	- calculate direction to other point




FUTURE TODO
- How are session stats from previous battles passed back and stored locally
- leaderboard 
- Settings



NOTES
This is going to require some sort of push ability from the cloud so I can update things in real time. 



------------------------------------------
Scratch
So what should I work on now. 
The firs logical thing seems to be the login. For that I need to create the google app engine app and start getting the enpoint up and running
Alternatively I could work on some of the UI and get the thing up and for the user interaction. I could also add the basic 

What if for now I didnt do it with tabs but I just had a main screen and the ability to jump around. Everything happens at the application level so its fine. 

So for now I will just return Dummy data and get the cloud end point set up later. 


Main screen 
- player info
- combat screen 

Combat button that starts a combat



User object

user {
	user_name : name
	user_id : id
	session_id : id
	user_alive : true
	wins: 0
	losses: 0
	weapon: 1
	cash: 0
	in_combat: false
	dual_id : 0
	}
	
	
So using firebase we can do a lot of stuff. I think it is the way to go here. Hmm but there are many thing to think about. 



So what this would allow me to do would be to create a set of objects that can be shared betwen users. I wouldnt be doing the actual calculation on the cloud
The power would be that they would be updated in real time. 

So how does this implementation come to be?

I still dont 100 percent see how I use this. hmmm. 

Well how would the combat be started

Think simple. 

You log in. By doing so you update your location. When you do so you get a list of active users. If you kill them they leave the map




For this to work we would need users to login 


Then you need to be able to see a list of users. 


As well you need to be able to see them on a map. 


You could totally add a murder ring element to this. It would be easier to kill people by being near them but to see them you would need to show up on the map.


So first I need a user object that is written when the users logs in. We dismiss the login when the user 


Simple user creation 
name: long: lat: timestamp:

So now I can create a user and I can login to a user. 

I feel like much of this app needs to be rewritten. But at the same time it is still quite simple. Basically what I need references objects. Those objects should have referecnes to there cloud entities and 
exist in an initiallized state or not. 



So what to do now. You can crete a user and you can 


	







